CASMSIM - an HP Classic series calculator micro assembler and simulator
Copyright 1995, 2003, 2004 Eric L. Smith <eric@brouhaha.com>
$Id$

CASMSIM consists of the CASM assembler and the CSIM simulator.

-----------------------------------------------------------------------------

IMPORTANT NOTES

Release 0.20 of CASMSIM is an interim development release.  This release
improves the microinstruction timing in CSIM.

CSIM now uses (modified) KML files and the GTK+ toolkit.

In this release, the HP-35, HP-45, HP-55, and HP-80 are simulated.

To use the simulator, you will need suitable digital images (photographs
or scans) of the calculators you wish to simulate.  No images are provided
in the release, however suitable ones may be obtained from the Museum of
HP Calculators:
    http://www.hpmuseum.org/
The appropriate image files may be downloaded and renamed to the correct
names automatically by commands like "make hp45.jpg".

The menu commands other than "Quit" and "About" are not implemented.

-----------------------------------------------------------------------------

Background

The HP-35, the first of HP's classic series of handheld calculators,
was introduced in 1972 and described as the "Electronic Slide Rule".
The HP-35 was a non-programmable scientific, and was followed by the
HP-45 improved scientific calculator, the HP-65 scientific
programmable with card reader, the HP-55 scientific programmable with
stopwatch, and the HP-70 and HP-80 business calculators.  All of these
calculators used essentially the same processor, which was also used
in the HP 3380 Integrator, the HP 5830 and HP 5840 Gas Chromatographs,
and the HP 1722 Oscilliscope.

In the HP classic series processor, unlike modern microprocessors,
various instructions were interpreted by various chips.  The core
processor consists of the C&T (control and timing), A&R (arithmetic
and registers) and the ROM or QUAD ROM chips.  Additions chips may be
present for data storage or program storage.  Since different
calculator models have different combinations of these chips, some
instructions are not available on all models.  For instance, the
"delayed select" instructions are probably not implemented in the
HP-35 and HP-80 which use single ROMs, and the "search for label"
instruction is only available in the HP-65.

The design of the processor and the instruction set are described in
detail in United States patents 3,863,060 and 4,001,569.

I've typed in the source code from the '569 and '379 patents which
cover the HP-45 and HP-55 respectively.  The listings in the patents
were poorly reproduced.  Peter Monta wrote a specialized OCR program
to verify the listing against the patent, and corrected several
errors.  The code in the patents might not be identical to that in
production units; I plan to eventually dump the ROMs from actual
calculators.

Peter Monta also *optically* dumped the contents of the HP-35 ROMs,
and disassembled the resulting code.  I've cleaned it up a bit and
added labels using the HP-45 source code as a guide.

-----------------------------------------------------------------------------

CASM

I used GNU tools to build CASM.  Originally I used GCC 2.5.8, Flex
2.4.7, Bison 1.22, and Make 3.71.  Most recently I'm using GCC 3.3.2,
Flex 2.5.4a, Bison 1.875, and Make 3.79.1.  Flex versions prior to
2.4.2 will not work.

CASM requires a single command line argument to specify the source
code file.

CASM derives names for the object and listing files from the source
filename by replacing the extension (everything after the last dot,
typically "asm") with "obj" or "lst".  If the source filename doesn't
have an extension CASM adds one.  The object file format is one word
per line with the five digit octal address, a colon and the
instruction word in hexadecimal.

I personally prefer my assembly source code to be in all lower case,
so it doesn't look like it is shouting at me.  All the source code I
have typed in from patents is in lower case, but CASM is case
insensitive so if you prefer emphatic source code be my guest.

CASM considers the keywords which are used to form instructions to be
reserved words, so they can't be used as labels.  HP's assembler was
more flexible in this regard; I had to change the label "go" in the
HP-55 source code to "go_".

CASM does a better job of displaying the branch target addresses than
the HP assembler did.  It will actually show the correct target
address based on the delayed select instructions, unless the delay
instruction is in the last word of a page.  CASM has a ".rom"
directive which can be used to provide the rom number.  This is
roughly equivalent to the origin directive in a typical assembler,
except that CASM always start assembling code at location 0 of the
selected ROM.

Because HP assembled each ROM separately, they were able to use the
same symbols in multiple ROMs.  CASM therefore has a separate name
space and keeps a separate symbol table for each ROM.

CASM has a .symtab directive which causes the symbol table to be
printed to the listing file.  If the source file contains multiple
ROMs, each ROM should have its own .symtab directive.

The file "hp55.asm" when assembled with CASM will produce one warning,
which will be printed to standard out twice (once during each pass).
This warning can be ignored as it is the result of CASM being pickier
than the HP assembler about forms of the "go to" instruction.

-----------------------------------------------------------------------------

CSIM

CSIM is a simulator for the hardware of the HP Classic series of
calculators.  It should be capable of simulating the HP-35, HP-45,
HP-55, HP-70, and HP-80.  With some additional work it should
eventually be able to simulate the HP-65.

CSIM uses the Gtk+ 2.2 toolkit and Glib 2.2.  It should be portable to
Windows and MacOS X, but has only been tested on Linux.

CSIM uses a single command line argument to specify the KML file.
If no argument is found, CSIM will try to find a file using the
concatentation of the name under which it was invoked and
".kml".  This allows you to (for instance) link CSIM to "hp45" and
have it automatically try to use "hp45.kml".

CSIM attempts to maintain a simulation speed of 3500 microinstructions
per second, the nominal rate of the real calculators, so that the
HP-55 timer mode runs at roughly the correct rate.  Other than the
HP-55, the calculators used an LC oscillator that was not very
accurate.  On a computer that is heavily loaded, the microinstruction
rate will be reduced, so the HP-55 timer mode (and the undocumented
HP-45 timer mode) will run slow.  Don't blame me if you try to use it
and burn your eggs.

If you want to use the undocumented timer mode of the HP-45, there are
comments in hp45.kml explaining the change necessary to that file.  On
a real HP-45 this feature was accessed by pressing RCL then the "right
half of the ENTER key".  The ENTER key actually covered two swithes,
but the key was shaped so that it only pressed the left switch, and
the ROM was written so the right switch would provide the ENTER
function as well as allowing use of the timer mode.  It was possible
to either put a shim on the key, or to create a a phantom keystroke by
simultaneously pressing CHS, 7, and 8.  CSIM doesn't support multiple
key presses at all, so the KML change makes the simulator's ENTER
button produce the keycode for the right switch.

-----------------------------------------------------------------------------

Credits (and blame)

CASMSIM was originally written by Eric Smith.  Any bugs in it are
almost certainly my fault.

Peter Monta developed a specialized OCR program for use on the ROM
listings in the US patents, and found one typo in my HP-45 source code
and several in my HP-55 source code.  He also provided modifications
to xio.c to support the HP-55 keyboard.

Dave Hicks translated CSIM to Java:
        http://www.hpmuseum.org/simulate/sim45.htm

-----------------------------------------------------------------------------

Notices

CASMSIM is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License version 2 as
published by the Free Software Foundation.  Note that I am not
granting permission to redistribute or modify CASMSIM under the terms
of any later version of the General Public License.

This program is distributed in the hope that it will be useful (or at
least amusing), but WITHOUT ANY WARRANTY; without even the implied
warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See
the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program (in the file "COPYING"); if not, write to the
Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139,
USA.
