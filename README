CASMSIM - an HP Classic series calculator micro assembler and simulator
Copyright 1995 Eric L. Smith (eric@telebit.com)
Last revised March 13, 1995

CASMSIM consists of the CASM assembler and the CSIM simulator.  It's just a
quick hack, so don't expect too much.

-----------------------------------------------------------------------------

Notices

CASMSIM is free software; you can redistribute it and/or modify it under the
terms of the GNU General Public License version 2 as published by the Free
Software Foundation.  Note that I am not granting permission to redistribute
or modify CASMSIM under the terms of any later version of the General Public
License.

This program is distributed in the hope that it will be useful (or at least
amusing), but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along with
this program (in the file "COPYING"); if not, write to the Free Software
Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

CASMSIM is distributed with a file named "hp45.asm" containing source code
from United States patent number 4,001,569 and a file named "hp55.asm"
containing source code from United States patent number 4,009,379.  These two
files are distributed only for your convenience; they are not part of CASMSIM,
are not copyrighted by Eric L. Smith, and are not subject to the General
Public License.

-----------------------------------------------------------------------------

Background

The HP-35, the first of HP's classic series of handheld calculators, was
introduced in 1972 and described as the "Electronic Slide Rule".  The HP-35
was a non-programmable scientific, and was followed by the HP-45 improved
scientific calculator, the HP-65 scientific programmable with card reader, the
HP-55 scientific programmable with stopwatch, and the HP-70 and HP-80 business
calculators.  All of these calculators used essentially the same processor,
which was also used in the HP 3380 Integrator, the HP 5830 and HP 5840 Gas
Chromatographs, and the HP 1722 Oscilliscope.

In the HP classic series processor, unlike modern microprocessors, various
instructions were interpreted by various chips.  The core processor consists
of the C&T (control and timing), A&R (arithmetic and registers) and the ROM
or QUAD ROM chips.  Additions chips may be present for data storage or
program storage.  Since different calculator models have different
combinations of these chips, some instructions are not available on all
models.  For instance, the "delayed select" instructions are probably not
implemented in the HP-35 and HP-80 which use single ROMs, and the "search for
label" instruction is only available in the HP-65.

The design of the processor and the instruction set are described in detail
in United States patents 3,863,060 and 4,001,569.

The '569 patent appears to cover the HP-45 calculator.  I have an HP-45 but I
haven't yet tried to dump the code to compare it to the listings in the patent.

The '379 patent appears to cover the HP-55 calculator.  I don't have an HP-55,
so I can't verify that the code in the patent matches that in the ROMs of an
actual HP-55.

There are likely to be errors in my transcriptions of the code from the
patents, as the listings in the patents are poorly reproduced.  Caveat Emptor!

Various other United States patents assigned to Hewlett-Packard appear to
contain source listings of ROMs of other HP calculators:

	3,863,060:	HP-80
	4,099,246:	HP-65 (only first half of ROM)
	4,291,385:	HP-65 (only first half of ROM)

-----------------------------------------------------------------------------

CASM

I used flex and bison to build CASM.  It should be possible to use yacc
instead of bison, but I don't think lex will work without some change the
input function.

CASM requires a single command line argument to specify the source code file.

CASM derives names for the object and listing files from the source filename
by replacing the extension (everything after the last dot, typically "asm")
with "obj" or "lst".  If the source filename doesn't have an extension CASM
adds one.  The object file format is one word per line with the five digit
octal address, a colon and the instruction word in hexadecimal.

I personally prefer my assembly source code to be in all lower case, so it
doesn't look like it is shouting at me.  All the source code I have typed in
from patents is in lower case, but CASM is case insensitive so if you prefer
emphatic source code be my guest.

CASM considers the keywords which are used to form instructions to be
reserved words, so they can't be used as labels.  HP's assembler was more
flexible in this regard; I had to change the label "go" in the HP-55 source
code to "go_".

CASM does a better job of displaying the branch target addresses than the HP
assembler did.  It will actually show the correct target address based on the
delayed select instructions, unless the delay instruction is in the last word
of a page.  CASM has a ".rom" directive which can be used to provide the rom
number.  This is roughly equivalent to the origin directive in a typical
assembler, except that CASM always start assembling code at location 0 of the
selected ROM.

CASM has a .symtab directive which causes the symbol table to be printed to
the listing file.  If the source file contains multiple ROMs, each ROM should
have its own .symtab directive.

-----------------------------------------------------------------------------

CSIM

CSIM is a simulator for the hardware of the HP Classic series of calculators.
It should be capable of simulating the HP-35, HP-45, HP-55, HP-70, and HP-80.
With some additional work it should eventually be able to simulate the HP-65.

CSIM currently uses the X window system, although by replacing the file xio.c
with an alternate file that implements the three functions whose prototypes
are in xio.h, it should be possible to make it work with any reasonable
input and output devices.  The X interface currently only supports the HP-45
keyboard legends.

Since CSIM simulates the actual hardware, it is of little use unless you have
an image of the ROM code from the calculator.

CSIM uses a single command line argument to specify the assembly listing file.
If no argument is found, CSIM will try to find a file using the concatentation
of the name under which it was invoked and "lst".  This allows you to (for
instance) link CSIM to "hp45" and have it automatically try to load and run
"hp45.lst".

At this point CSIM just barely parially works with the HP-45 ROM image; it
doesn't work with the HP-55 image at all.  I don't know how much of this is
due to errors in CSIM versus errors in my typing of the assembly sources.  In
this release CSIM should be viewed as a snapshot of a work in progress.  No
effort has been made to do any performance optimization.  For instance, the
display is updated and keyboard events are polled after every instruction
cycle.  At this point I'm more concerned with improving the accuracy of the
simulation.  Currently the following functions of the HP-45 are known NOT to
work on CSIM:

    digit entry
    exponent entry
    trig functions (including polar conversions)
    factorial
    pi

Most everything else works, although obviously without digit entry it is
pretty useless.

