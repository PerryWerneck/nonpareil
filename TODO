TODO list for Nonpareil
Copyright 1995, 2003, 2004, 2005, 2006 Eric L. Smith <eric@brouhaha.com>
$Id$


Needed for next release:

  Implement reading kml, image, roms from NCZ file
    use a GdkPixbufLoader instead of gdk_pixbuf_new_from_file().

  Change model chooser to use NCZ files

  Fix scons install, source tarball, Windows binary targets (broken with
  major build system overhaul)

  Finish Voyager background/key image separation

  Create replacement for button widget.

  Improve support for -41C .mod files

  Windows installer using NSIS, using .nsi file from Christoph Giesselink,
  latest in email on 14-Dec-2005.

  KML and images for 22 and 27 based on Maciej's images for 21 and 25.


Build process:

  Create an RPM .spec file.

    Should meet Fedora RPM guidelines:
    http://fedora.redhat.com/participate/developers-guide/ch-rpm-building.html

    "scons dist" should create the nonpareil.spec
    file from a template, so that "rpmbuild -tb" will work with the release
    tarball.

  Change builders for tarballs and zip files to construct directly using
  Python zip/tar libraries rather than invoking external programs.

  Write a builder to create SRPM from .spec and source tarball.


User interface:

  Custom menu from KML file (e.g., "ON-x" commands)

  Startup:
      Save path of NCZ file in state save file.
      Allow starting Nonpareil with state save file as command line argument.
      If no command line argument, provide dialog for user to choose
           calculator (KML done, should show state saves as well).

  Configuration:
      Implement "remove module"

  Printer:
      should mode switch be a menu?
      power switch?
      handle closing window, provide way to reopen
      start "tape" at bottom of window
      more "save as" types (text, multi-column PDF?)
      signal out-of-paper when scroll buffer is full
      menu item to install fresh paper

  Replace use of GtkItemFactory (deprecated) with GTKUIManager?

  Visual improvements
      slide switches
      keyboard button hilighting - new widget?

  Implement edit menu commands:
      Edit - Copy, Paste

  Transparency/shape: improve support for moving window: add KML
  syntax to specify keyboard rectangle, and use only region outside
  rectangle for dragging.

  Improve keyboard support:
      Release key when focus is lost.

  Add help.

  Create an icon.

  Create a fancier About box.  Use GtkAboutDialog, which allows for
  clickable website URLs and email addresses, license window, etc.

  Extract comments from image file and include in About box.  PNG
  comment keywords to use:
      Author
      Title
      Description
      Copyright
      Disclaimer
      Warning
      URL (unofficial)
  Unfortunately getting the comments will require the file to be
  read twice, once by gdk_pixbuf_new_from_file(), and once by direct
  calls to libpng, libjpeg, etc.  Update: maybe can do parallel
  parsing on the fly, by reading the file myself and passing the
  data into a GdkPixbufLoader.


Internals:

  Display improvements:
     Change Classic and Woodstock to use a display "chip".
 
     Eliminate dedicated display callback and initialization args to
     sim_init() by using generic chip interface infrastructure.

     Sim thread:
         Use io_count, etc. to improve display update timing.  (done in Nut.)
         Only send display update message to GUI thread if display has changed.

    Increase display update performance

      Pre-render digits/characters (compositing of segments) to increase
      display update performance.  Need 2**9 segment combinations for
      Voyager, 2**9 character/punctuation combinations for Coconut.  Note
      that this will require Coconut code to pass character code to GUI
      rather than segment map.

      Push pre-rendered digits/characters to X server (optional?) using
      GDK pixmaps.  Create offscreen pixmap from pixbuf with
      gdk_draw_pixbuf().  Use gdk_draw_drawable() to blit to display.

  Change Phineas to store vars in binary, convert to BCD only for
      Nut read/write instructions

  Split proc.c into separate GUI thread and simulator thread portions.

  Create new XML-based ROM file format.

  New memory API.

  Move more of the simulator initialization into the simulator thread.

  In csim.c, allow for multiple calculator instances.

  Use more of glib:

      file handling: g_build_filename(), g_stat()

      memory allocation/deallocation

      commandline option parser (g_option_xxx functions).  (glib 2.6)

  Add code to remove async queue g_source when simulator thread exits.


KML:

  It would be nice to use a pure parser for KML, pass in the kml_t
  pointer as input, and return it from read_kml_file().  But Flex
  doesn't yet seem to have support for the Bison pure_parser option.
  There exist patches, but I don't want to make people use those.
  Better to wait for a production release of Flex.

  Use XML files instead of KML?  (.nml?)


Assembler:

  Fix "delayed select" and branch targets (Classic, possibly Woodstock)

  Clean up memory usage of symbols in CASM.  As of 21-Apr-2006, I don't
  remember exactly what this means, but maybe it will come back to me
  if I study the code.

  Implement symbol cross-reference in CASM

  Allow keywords to be used as labels, by making putting a "label"
  production in the parser which can be either an identifier or any
  keyword.  Might cause ambiguities in the parser.

  Add Nut support.

Disassembler:

  Add disassembler for Classic processors.

  Make disassembler talk to sim thread rather than passing in two
  words as parameters.


Debugger:

  Make the register and memory windows update, and make changes get
  written back.
    * Have the GUI track what registers and memory locs are actually
      visible, and ask the sim core for async notifications when those
      locations change.
    * Display changed values highlighted (in red?).  Don't need to
      determine whether non-visible locations have changed.
    * ? Disable editing (and grey out?) while running.

  Add debugger commands.  Pass dbt_t as arg to commands.

  Switch to new VTE patch by John Swensen based on feedback from Nalin,
  Gnome Bugzilla bug #135230.

  Change Tcl standard I/O streams to use pty file descriptor.

  Implement async queue based functions needed by debugger.


Better model support:

  Add 41C HEPAX support.

  Dump actual ROMs:

      Classic:
                HP-55
                HP-65
                HP-70

      Classic/printing:
		HP-46
		HP-81
		HP 9805A

      Woodstock:
		early HP-29C
		HP-67 (0227: early rev not compatible with 1820-1596 AMI ACT)

      Topcat:
		HP-91
		HP-92
		HP-95C
		HP-97 (0225: early rev not compatible with 1820-1596 AMI ACT)

      Sting:	HP-10 (optical)
		early HP-19C

      Spice:
		HP-31E
		HP-33E

      Cricket:
		HP-01 (optical)

  Compare actual HP-55, and HP-80 ROMs to CASM output.

  Add Woodstock microinstructions for card reader (HP-67, HP-97)

  Add Woodstock microinstructions for printer (HP-19C, HP-91, HP-92, HP-95C, HP-97)

  Add HP-65 microinstructions for program memory access.

