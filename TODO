TODO list for Nonpareil
Copyright 1995, 2003, 2004, 2005, 2006, 2008 Eric Smith <eric@brouhaha.com>
$Id$


Needed urgently:

  For Windows binary distribution:

    NSIS installer needs to create the GTK config file

    Include licensing information for libraries.

  Bug - 0-c-1 in decimal mode can go negative!

  97 SST/BST key support (CR flag 4 tied to keyboard KBE)
  19C/Topcat switch wiring to ACT key scanner

  nui files for 55, 80

  remove 34C from release pending fixes
  package Voyager NCD/NUI files separately

  card reader
    handle write protection
    file chooser should filter for .crd files
    use menu rather than separate window
    menu item to toggle write protection of a card

  Put license notices in microcode source and object files and NCD files.

  Check scons install, Windows binary targets, haven't been tested in
  a while

  Improve support for -41C .mod files
	Make GUI track mod files in ports 1-4

  Add 15X with patched ROM.

  Better handling of three-position slide switches


Longer term:

  Improve support for -41C .mod files
	Port 5-7 (or T, P, H) for 0x5000, 0x6000, 0x7000?
	HP-IL module (w/ printer ROM enabled) would occupy ports P and H!


Build process:

  build_ncd needs to preserve the copyright information supplied in
  the obj_file elements of the ncd.tmpl.


Packaging:

  Create an RPM .spec file.

    Should meet Fedora RPM guidelines:
    http://fedora.redhat.com/participate/developers-guide/ch-rpm-building.html

    "scons dist" should create the nonpareil.spec
    file from a template, so that "rpmbuild -tb" will work with the release
    tarball.

  Write a builder to create SRPM from .spec and source tarball.


User interface:

  Custom menu from KML file (e.g., "ON-x" commands)

  Startup:
      Save path of NCZ file in state save file.
      Allow starting Nonpareil with state save file as command line argument.
      If no command line argument, provide dialog for user to choose
           calculator (KML done, should show state saves as well).

  Configuration:
      Implement "remove module"

  Printer:
      should mode switch be a menu?
      power switch?
      handle closing window, provide way to reopen
      start "tape" at bottom of window
      more "save as" types (text, multi-column PDF?)
      signal out-of-paper when scroll buffer is full
      menu item to install fresh paper

  Replace use of GtkItemFactory (deprecated) with GTKUIManager?

  Implement edit menu commands:
      Edit - Copy, Paste

  Improve keyboard support:
      Release key when focus is lost.

  Add help.

  Create an icon.

  Create a fancier About box.  Use GtkAboutDialog, which allows for
  clickable website URLs and email addresses, license window, etc.

  Extract comments from image file and include in About box.  PNG
  comment keywords to use:
      Author
      Title
      Description
      Copyright
      Disclaimer
      Warning
      URL (unofficial)
  Unfortunately getting the comments will require the file to be
  read twice, once by gdk_pixbuf_new_from_file(), and once by direct
  calls to libpng, libjpeg, etc.  Update: maybe can do parallel
  parsing on the fly, by reading the file myself and passing the
  data into a GdkPixbufLoader.  Update: gdk_pixbuf_new_from_file()
  is probably already parsing this data, which can probably be
  accessed by gdk_pixbuf_get_option().


Internals:

  Move single-instruction code to proc.c.

  Invoke processor single-cycle function by cycle event to chip rather than
  dedicated function pointer.

  Display improvements:
     Change Classic and Woodstock to use a display "chip".
 
     Eliminate dedicated display callback and initialization args to
     sim_init() by using generic chip interface infrastructure.

     Sim thread:
         Use io_count, etc. to improve display update timing.  (done in Nut.)
         Only send display update message to GUI thread if display has changed.

    Increase display update performance

      Pre-render digits/characters (compositing of segments) to increase
      display update performance.  Need 2**9 segment combinations for
      Voyager, 2**9 character/punctuation combinations for Coconut.  Note
      that this will require Coconut code to pass character code to GUI
      rather than segment map.

      Push pre-rendered digits/characters to X server (optional?) using
      GDK pixmaps.  Create offscreen pixmap from pixbuf with
      gdk_draw_pixbuf().  Use gdk_draw_drawable() to blit to display.

  Phineas:
      init from system time
      store vars in binary, convert to BCD only for Nut read/write instructions

  Split proc.c into separate GUI thread and simulator thread portions.

  New memory API.

  Move more of the simulator initialization into the simulator thread.

  In csim.c, allow for multiple calculator instances.

  Use more of glib:

      file handling: g_build_filename(), g_stat()

      memory allocation/deallocation

      commandline option parser (g_option_xxx functions).  (glib 2.6)

  Add code to remove async queue g_source when simulator thread exits.


KML:

  Reimplement include files.

  It would be nice to use a pure parser for KML, pass in the kml_t
  pointer as input, and return it from read_kml_file().  But Flex
  doesn't yet seem to have support for the Bison pure_parser option.
  There exist patches, but I don't want to make people use those.
  Better to wait for a production release of Flex.

  Use XML files instead of KML?  (.nml?)


Assembler:

  Add copyright/license directive, to pass comments through to object file.

  Finish ".crc" and ".crc reset" directives for Spice series.

  Fix "delayed select" and branch targets (Classic, possibly Woodstock)

  Clean up memory usage of symbols in CASM.  As of 21-Apr-2006, I don't
  remember exactly what this means, but maybe it will come back to me
  if I study the code.

  Implement symbol cross-reference.

  Allow keywords to be used as labels, by making putting a "label"
  production in the parser which can be either an identifier or any
  keyword.  Might cause ambiguities in the parser.

  Add Nut support.

Disassembler:

  Add disassembler for Classic processors.


Debugger:

  Make the register and memory windows update, and make changes get
  written back.
    * Have the GUI track what registers and memory locs are actually
      visible, and ask the sim core for async notifications when those
      locations change.
    * Display changed values highlighted (in red?).  Don't need to
      determine whether non-visible locations have changed.
    * ? Disable editing (and grey out?) while running.

  Add debugger commands.  Pass dbt_t as arg to commands.

  Change Tcl standard I/O streams to use pty file descriptor.

  Implement async queue based functions needed by debugger.

  Display source code:
     GtkSourceView      http://gtksourceview.sourceforge.net/
     Scintilla          http://scintilla.sourceforge.net/


Better model support:

  Add 41C HEPAX support.

  Dump actual ROMs:

      Classic:
                HP-55
                HP-65
                HP-70

      Classic/printing:
		HP-46
		HP-81
		HP 9805A

      Woodstock:
		early HP-29C
		HP-67 (1818-0227: early rev not compatible with 1820-1596 AMI ACT)

      Topcat:
		HP-91
		HP-92
		HP-95C
		HP-97 (1818-0225: early rev not compatible with 1820-1596 AMI ACT)

      Sting:	HP-10 (optical)
		early HP-19C

      Spice:
		HP-31E
		early 32E (might not use 1820-2162 processor?)
		HP-33E

      Cricket:
		HP-01 (optical)

  Compare actual HP-55, and HP-80 ROMs to CASM output.

  Add HP-65 microinstructions for program memory access.

