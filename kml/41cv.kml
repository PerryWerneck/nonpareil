# $Id$
# Copyright 2004, 2005 Eric L. Smith <eric@brouhaha.com>

# Nonpareil is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.  Note that I am not
# granting permission to redistribute or modify Nonpareil under the
# terms of any later version of the General Public License.

# Nonpareil is distributed in the hope that they will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program (in the file "COPYING"); if not, write to
# the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111, USA.

global
	title "41CV Programmable Scientific Calculator"
	author "Eric Smith <eric@brouhaha.com>"
	hardware "Coconut"
	model "41cv"
	rom "41cv.mod"
#	listing "41c.lst"
	image "41cv.png"
	color 0 137 0 6	  # background color, used when transparency is off
end

background
	offset 0 0
	size 270 496
end

display
	offset 8 8
	size 254 48

	#color 0 142 125 109   # background
	color 0 182 165 149   # background
	color 1 182 165 149   # unlit segments
	color 2   0   0   0   # lit segments

	annunciator  0  size 17 7  offset  20 37  end   # BAT
	annunciator  1  size 23 7  offset  44 37  end   # USER
	annunciator  2  size  5 7  offset  74 37  end   # G
	annunciator  3  size 17 7  offset  80 37  end   # RAD
	annunciator  4  size 29 7  offset 104 37  end   # SHIFT
	annunciator  5  size  5 7  offset 140 37  end   # 0
	annunciator  6  size  5 7  offset 146 37  end   # 1
	annunciator  7  size  5 7  offset 152 37  end   # 2
	annunciator  8  size  5 7  offset 158 37  end   # 3
	annunciator  9  size  5 7  offset 164 37  end   # 4
	annunciator 10  size 23 7  offset 176 37  end   # PRGM
	annunciator 11  size 29 7  offset 206 37  end   # ALPHA

	digits 12
		size 20 22
		offset 6 4
	end


	segment 'a' scaled offset  2 498 size 119 129
                           color 255   0   0  end       # red

	segment 'b' scaled offset  2 498 size 119 129
                           color   0 255   0  end       # green

	segment 'c' scaled offset  2 498 size 119 129
                           color   0   0 255  end       # blue

	segment 'd' scaled offset  2 498 size 119 129
                           color 255 255   0  end       # yellow

	segment 'e' scaled offset  2 498 size 119 129
                           color 255   0 255  end       #

	segment 'f' scaled offset  2 498 size 119 129
                           color   0 255 255  end       #

	segment 'g' scaled offset  2 498 size 119 129
                           color 255 128   0  end       # orange

	segment 'h' scaled offset  2 498 size 119 129
                           color 255   0 128  end       # pink

	segment 'i' scaled offset  2 498 size 119 129
                           color 128   0   0  end       # dark red

	segment 'j' scaled offset  2 498 size 119 129
                           color   0 128   0  end       # dark green

	segment 'k' scaled offset  2 498 size 119 129
                           color   0   0 128  end       # dark blue

	segment 'l' scaled offset  2 498 size 119 129
                           color 127 255 212  end       # aquamarine

	segment 'm' scaled offset  2 498 size 119 129
                           color 233 150 122  end       # dark salmon

	segment 'n' scaled offset  2 498 size 119 129
                           color   0   0   0  end       # black

	segment 'o' scaled offset  2 498 size 119 129   # period
                           color 128 128 128  end       # grey

	segment 'p' scaled offset  2 498 size 119 129   # comma
                           color  64  64  64  end       # dark grey

	segment 'q' scaled offset  2 498 size 119 129   # upper dot of colon
                           color 192 192 192  end       # light grey


	character default  # blank
          segment                                                         end

	character 0x00  # @
	  segment 'a' 'b'     'd' 'e' 'f'     'h' 'i'                     end

	character 0x01  # A
	  segment 'a' 'b' 'c'     'e' 'f' 'g' 'h'                         end

	character 0x02  # B
	  segment 'a' 'b' 'c' 'd'             'h' 'i' 'j'                 end

	character 0x03  # C
	  segment 'a'         'd' 'e' 'f'                                 end

	character 0x04  # D
	  segment 'a' 'b' 'c' 'd'                 'i' 'j'                 end

	character 0x05  # E
	  segment 'a'         'd' 'e' 'f' 'g' 'h'                         end

	character 0x06  # F
	  segment 'a'             'e' 'f' 'g' 'h'                         end

	character 0x07  # G
	  segment 'a'     'c' 'd' 'e' 'f'     'h'                         end

	character 0x08  # H
	  segment     'b' 'c'     'e' 'f' 'g' 'h'                         end

	character 0x09  # I
	  segment 'a'         'd'                 'i' 'j'                 end

	character 0x0a  # J
	  segment     'b' 'c' 'd' 'e'                                     end

	character 0x0b  # K
	  segment                 'e' 'f' 'g'             'k'     'm'     end

	character 0x0c  # L
	  segment             'd' 'e' 'f'                                 end

	character 0x0d  # M
	  segment     'b' 'c'     'e' 'f'                 'k' 'l'         end

	character 0x0e  # N
	  segment     'b' 'c'     'e' 'f'                     'l' 'm'     end

	character 0x0f  # O
	  segment 'a' 'b' 'c' 'd' 'e' 'f'                                 end

	character 0x10  # P
	  segment 'a' 'b'         'e' 'f' 'g' 'h'                         end

	character 0x11  # Q
	  segment 'a' 'b' 'c' 'd' 'e' 'f'                         'm'     end

	character 0x12  # R
	  segment 'a' 'b'         'e' 'f' 'g' 'h'                 'm'     end

	character 0x13  # S
	  segment 'a'     'c' 'd'     'f' 'g' 'h'                         end

	character 0x14  # T
	  segment 'a'                             'i' 'j'                 end

	character 0x15  # U
	  segment     'b' 'c' 'd' 'e' 'f'                                 end

	character 0x16  # V
	  segment                 'e' 'f'                 'k'         'n' end

	character 0x17  # W
	  segment     'b' 'c'     'e' 'f'                         'm' 'n' end

	character 0x18  # X
	  segment                                         'k' 'l' 'm' 'n' end

	character 0x19  # Y
	  segment                                     'j' 'k' 'l'         end

	character 0x1a  # Z
	  segment 'a'         'd'                         'k'         'n' end

	character 0x1b  # [
	  segment 'a'         'd' 'e' 'f'                                 end

	character 0x1c  # \
	  segment                                             'l' 'm'     end

	character 0x1d  # ]
	  segment 'a' 'b' 'c' 'd'                                         end

	character 0x1e  # up-arrow
	  segment 'a' 'b'                                 'k'         'n' end

	character 0x1f  # underscore
	  segment             'd'                                         end

	character 0x20  # SPA space
	  segment                                                         end

	character 0x21  # !
	  segment                                 'i' 'j'                 end

	character 0x22  # "
	  segment                     'f'         'i'                     end

	character 0x23  # #
	  segment     'b' 'c' 'd'         'g' 'h' 'i' 'j'                 end

	character 0x24  # $
	  segment 'a'     'c' 'd'     'f' 'g' 'h' 'i' 'j'                 end

	character 0x25  # %
	  segment         'c'         'f' 'g' 'h'         'k' 'l' 'm' 'n' end

	character 0x26  # &
	  segment 'a'     'c' 'd'                         'k' 'l' 'm' 'n' end

	character 0x27  # '
	  segment                                 'i'                     end

	character 0x28  # (
          segment                                         'k'     'm'     end

	character 0x29  # )
	  segment                                             'l'     'n' end

	character 0x2a  # *
	  segment                         'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' end

	character 0x2b  # +
	  segment                         'g' 'h' 'i' 'j'                 end

	character 0x2c  # LGO left goose
	  segment                         'g' 'h'         'k'     'm'     end

	character 0x2d  # -
	  segment                         'g' 'h'                         end

	character 0x2e  # RGO right goose
	  segment                         'g' 'h'             'l'     'n' end

	character 0x2f  # /
	  segment                                         'k'         'n' end

	character 0x30  # 0 (displayed with slash to distinguish from letter O)
	  segment 'a' 'b' 'c' 'd' 'e' 'f'                 'k'         'n' end

	character 0x31  # 1
	  segment     'b' 'c'                                             end

        character 0x32  # 2
	  segment 'a' 'b'     'd' 'e'     'g' 'h'                         end

	character 0x33  # 3
	  segment 'a' 'b' 'c' 'd'         'g' 'h'                         end

	character 0x34  # 4
	  segment     'b' 'c'         'f' 'g' 'h'                         end

	character 0x35  # 5
	  segment 'a'     'c' 'd'             'h'             'l'         end

	character 0x36  # 6
	  segment 'a'     'c' 'd' 'e' 'f' 'g' 'h'                         end

	character 0x37  # 7
	  segment 'a' 'b' 'c'                                             end

	character 0x38  # 8
	  segment 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h'                         end

	character 0x39  # 9
	  segment 'a' 'b' 'c' 'd'     'f' 'g' 'h'                         end

	character 0x3a  # FUL starburst (all segments on)
	  segment 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' end

	character 0x3b  # SEM ;
	  segment                         'g'                         'n' end

	character 0x3c  # <
	  segment             'd'                         'k'         'n' end

	character 0x3d  # =
	  segment             'd'         'g' 'h'                         end

	character 0x3e  # >
	  segment             'd'                             'l' 'm'     end

	character 0x3f  # ?
	  segment 'a' 'b'             'f'     'h'     'j'                 end

        character 0x40  # APP lazy T
	  segment                 'e' 'f' 'g' 'h'                         end

        character 0x41  # lower case a
	  segment         'c' 'd' 'e'     'g'                     'm'     end

        character 0x42  # lower case b
      	  segment         'c' 'd' 'e' 'f' 'g' 'h'                         end

        character 0x43  # lower case c
	  segment             'd' 'e'     'g' 'h'                         end

        character 0x44  # lower case d
	  segment     'b' 'c' 'd' 'e'     'g' 'h'                         end

        character 0x45  # lower case e
	  segment             'd' 'e'     'g'                         'n' end

	character 0x46  # OVE overbar (hangman characters - head only)
	  segment 'a'                                                     end

        character 0x47  # SUP high-T (hangman neck)
	  segment 'a'                             'i'                     end

        character 0x48  # HAN left leg
	  segment 'a'                             'i'                 'n' end

        character 0x49  # HAN right leg
	  segment 'a'                             'i'             'm' 'n' end

        character 0x4a  # HAN left arm
	  segment 'a'                     'g'     'i'             'm' 'n' end

        character 0x4b  # HAN right arm - full hangman
	  segment 'a'                     'g' 'h' 'i'             'm' 'n' end

        character 0x4c  # MIC Greek mu
	  segment     'b'                     'h' 'i'                 'n' end

        character 0x4d  # NOT not equal
	  segment             'd'         'g' 'h'         'k'         'n' end

        character 0x4e  # SIG Greek Sigma
	  segment 'a'         'd'                             'l'     'n' end

        character 0x4f  # ANG angle symbol
	  segment             'd'                     'j' 'k'         'n' end

	# Halfnut models have additonal characters 0x50 through 0x7f, which
	# display as spaces on fullnuts.  See CHHU Chronicle V2N4 for
	# details.

	character 0x50  # DC1 pi
	  segment                         'g' 'h'                 'm' 'n' end

	character 0x51  # BEL alpha
          segment             'd'                                 'm' 'n' end

	character 0x52  # BAC beta
	  segment 'a'         'd'             'h'         'k'     'm' 'n' end

	character 0x53  # HTA gamma
	  segment                         'g' 'h'     'j'                 end

	character 0x54  # UN  unknown
          segment                     'f' 'g' 'h'     'j'         'm'     end

	character 0x55  # vta sigma
	  segment                 'e'     'g' 'h'                     'n' end

	character 0x56  # OVE overbar (duplicate of 0x46)
	  segment 'a'                                                     end

	character 0x57  # ESC Gamma
	  segment 'a' 'b'         'e' 'f'                                 end

        character 0x58  # HAN left leg (duplicate of 0x48)
	  segment 'a'                             'i'                 'n' end

        character 0x59  # HAN right leg (duplicate of 0x49)
	  segment 'a'                             'i'             'm' 'n' end

        character 0x5a  # HAN left arm (duplicate of 0x4a)
	  segment 'a'                     'g'     'i'             'm' 'n' end

        character 0x5b  # HAN right arm - full hangman (duplicate of 0x4b)
	  segment 'a'                     'g' 'h' 'i'             'm' 'n' end

        character 0x5c  # MIC Greek mu (duplicate of 0x4c)
	  segment     'b'                     'h' 'i'                 'n' end

        character 0x5d  # NOT not equal (duplicate of 0x4d)
	  segment             'd'         'g' 'h'         'k'         'n' end

	character 0x5e  # DC3 lamda
	  segment                                             'l' 'm' 'n' end

        character 0x5f  # ANG angle symbol (duplicate of 0x4f)
	  segment             'd'                     'j' 'k'         'n' end

	character 0x60  # SUP high-T (duplicate of 0x47)
	  segment 'a'                             'i'                     end

        character 0x61  # lower case a (duplicate of 0x61)
	  segment         'c' 'd' 'e'     'g'                     'm'     end

        character 0x62  # lower case b (duplicate of 0x61)
      	  segment         'c' 'd' 'e' 'f' 'g' 'h'                         end

        character 0x63  # lower case c (duplicate of 0x61)
	  segment             'd' 'e'     'g' 'h'                         end

        character 0x64  # lower case d (duplicate of 0x61)
	  segment     'b' 'c' 'd' 'e'     'g' 'h'                         end

        character 0x65  # lower case e (duplicate of 0x61)
	  segment             'd' 'e'     'g'                         'n' end

	character 0x66  # lower case f
	  segment                             'h'     'j' 'k'             end

	character 0x67  # lower case g
	  segment         'c' 'd'             'h'                 'm'     end

	character 0x68  # lower case h
	  segment         'c'     'e' 'f' 'g' 'h'                         end

	character 0x69  # lower case i
	  segment                 'e'                                     end

	character 0x6a  # lower case j
	  segment         'c' 'd'                                         end

	character 0x6b  # lower case k
	  segment                 'e' 'f' 'g' 'h'                 'm'     end

	character 0x6c  # lower case l
	  segment                 'e' 'f'                                 end

	character 0x6d  # lower case m
	  segment         'c'     'e'     'g' 'h'     'j'                 end

	character 0x6e  # lower case n
	  segment         'c'     'e'     'g' 'h'                         end

	character 0x6f  # lower case o
	  segment         'c' 'd' 'e'     'g' 'h'                         end

	character 0x70  # lower case p
	  segment                 'e' 'f' 'g'                 'l'         end

	character 0x71  # lower case q
	  segment                     'f' 'g'                 'l' 'm'     end

	character 0x72  # lower case r
	  segment                 'e'     'g' 'h'                         end

	character 0x73  # lower case s
	  segment             'd'             'h'                 'm'     end

	character 0x74  # lower case t
	  segment                         'g' 'h' 'i'             'm'     end

	character 0x75  # lower case u
	  segment         'c' 'd' 'e'                                     end

	character 0x76  # lower case v
	  segment                 'e'                                 'n' end

	character 0x77  # lower case w
	  segment         'c'     'e'                             'm' 'n' end

	character 0x78  # lower case x
	  segment                         'g' 'h'     'j'             'n' end

	character 0x79  # lower case y
	  segment         'c' 'd'                                 'm'     end

	character 0x7a  # lower case z
	  segment             'd'         'g'                         'n' end

	character 0x7b  # LEF {
	  segment                             'h'         'k'     'm'     end

	character 0x7c  # DEL delta
	  segment             'd'                         'k'     'm' 'n' end

	character 0x7d  # RIG }
	  segment                         'g'                 'l'     'n' end

	character 0x7e  # SIG (duplicate of 0x4e)
	  segment 'a'         'd'                             'l'     'n' end

	character 0x7f  # APP lazy T (duplicate of 0x40)
	  segment                 'e' 'f' 'g' 'h'                         end


end # display


button 01  type 0  size 37 18  offset  21  65  down 2 8  keycode 0x18  end
button 02  type 0  size 37 18  offset  69  65  down 2 8  keycode 0xc6  end
button 03  type 0  size 37 18  offset 165  65  down 2 8  keycode 0xc5  end
button 04  type 0  size 37 18  offset 213  65  down 2 8  keycode 0xc4  end

button 11  type 0  size 30 28  offset  24 111  down 2 8  keycode 0x10  end
button 12  type 0  size 30 28  offset  72 111  down 2 8  keycode 0x30  end
button 13  type 0  size 30 28  offset 120 111  down 2 8  keycode 0x70  end
button 14  type 0  size 30 28  offset 168 111  down 2 8  keycode 0x80  end
button 15  type 0  size 30 28  offset 216 111  down 2 8  keycode 0xc0  end

button 21  type 0  size 30 28  offset  24 159  down 2 8  keycode 0x11  end
button 22  type 0  size 30 28  offset  72 159  down 2 8  keycode 0x31  end
button 23  type 0  size 30 28  offset 120 159  down 2 8  keycode 0x71  end
button 24  type 0  size 30 28  offset 168 159  down 2 8  keycode 0x81  end
button 25  type 0  size 30 28  offset 216 159  down 2 8  keycode 0xc1  end

button 31  type 0  size 30 28  offset  24 207  down 2 8  keycode 0x12  end
button 32  type 0  size 30 28  offset  72 207  down 2 8  keycode 0x32  end
button 33  type 0  size 30 28  offset 120 207  down 2 8  keycode 0x72  end
button 34  type 0  size 30 28  offset 168 207  down 2 8  keycode 0x82  end
button 35  type 0  size 30 28  offset 216 207  down 2 8  keycode 0xc2  end

button 41  type 0  size 78 28  offset  24 255  down 2 8  keycode 0x13  end
button 42  type 0  size 30 28  offset 120 255  down 2 8  keycode 0x73  end
button 43  type 0  size 30 28  offset 168 255  down 2 8  keycode 0x83  end
button 44  type 0  size 30 28  offset 216 255  down 2 8  keycode 0xc3  end

button 51  type 0  size 24 28  offset  24 303  down 2 8  keycode 0x14  end
button 52  type 0  size 37 28  offset  73 303  down 2 8  keycode 0x34  end
button 53  type 0  size 37 28  offset 141 303  down 2 8  keycode 0x74  end
button 54  type 0  size 37 28  offset 209 303  down 2 8  keycode 0x84  end

button 61  type 0  size 24 28  offset  24 351  down 2 8  keycode 0x15  end
button 62  type 0  size 37 28  offset  73 351  down 2 8  keycode 0x35  end
button 63  type 0  size 37 28  offset 141 351  down 2 8  keycode 0x75  end
button 64  type 0  size 37 28  offset 209 351  down 2 8  keycode 0x85  end

button 71  type 0  size 24 28  offset  24 399  down 2 8  keycode 0x16  end
button 72  type 0  size 37 28  offset  73 399  down 2 8  keycode 0x36  end
button 73  type 0  size 37 28  offset 141 399  down 2 8  keycode 0x76  end
button 74  type 0  size 37 28  offset 209 399  down 2 8  keycode 0x86  end

button 81  type 0  size 24 28  offset  24 447  down 2 8  keycode 0x17  end
button 82  type 0  size 37 28  offset  73 447  down 2 8  keycode 0x37  end
button 83  type 0  size 37 28  offset 141 447  down 2 8  keycode 0x77  end
button 84  type 0  size 37 28  offset 209 447  down 2 8  keycode 0x87  end

# main keyboard:
scancode "0"           map 0 82 end
scancode "1"           map 0 72 end
scancode "2"           map 0 73 end
scancode "3"           map 0 74 end
scancode "4"           map 0 62 end
scancode "5"           map 0 63 end
scancode "6"           map 0 64 end
scancode "7"           map 0 52 end
scancode "8"           map 0 53 end
scancode "9"           map 0 54 end
scancode "period"      map 0 83 end  # .
scancode "plus"        map 0 61 end  # +
scancode "minus"       map 0 51 end  # -
scancode "asterisk"    map 0 71 end  # *
scancode "slash"       map 0 81 end  # /

#all letter access the key it is printed on
scancode "a"           map 0 11 end
scancode "b"           map 0 12 end
scancode "c"           map 0 13 end
scancode "d"           map 0 14 end
scancode "e"           map 0 15 end
scancode "f"           map 0 21 end
scancode "g"           map 0 22 end
scancode "h"           map 0 23 end
scancode "i"           map 0 24 end
scancode "j"           map 0 25 end
scancode "k"           map 0 32 end
scancode "l"           map 0 33 end
scancode "m"           map 0 34 end
scancode "n"           map 0 41 end
scancode "o"           map 0 42 end
scancode "p"           map 0 43 end
scancode "q"           map 0 51 end
scancode "r"           map 0 52 end
scancode "s"           map 0 53 end
scancode "t"           map 0 54 end
scancode "u"           map 0 61 end
scancode "v"           map 0 62 end
scancode "w"           map 0 63 end
scancode "x"           map 0 64 end
scancode "y"           map 0 71 end
scancode "z"           map 0 72 end
scancode "equal"       map 0 73 end # =
scancode "question"    map 0 74 end # ?

scancode "BackSpace"   map 0 44 end # backspace
scancode "Return"      map 0 41 end # ENTER

scancode "Tab"         map 0 31 end # shift (gold)

scancode "F4"          map 0 01 end # ON
scancode "F5"          map 0 02 end # USER
scancode "F6"          map 0 03 end # PRGM
scancode "F7"          map 0 04 end # ALPHA

scancode "F8"          map 0 35 end # SST
scancode "F9"          map 0 84 end # R/S

# keypad:
scancode "KP_0"        map 0 82 end
scancode "KP_1"        map 0 72 end
scancode "KP_2"        map 0 73 end
scancode "KP_3"        map 0 74 end
scancode "KP_4"        map 0 62 end
scancode "KP_5"        map 0 63 end
scancode "KP_6"        map 0 64 end
scancode "KP_7"        map 0 52 end
scancode "KP_8"        map 0 53 end
scancode "KP_9"        map 0 54 end
scancode "KP_Decimal"  map 0 83 end  # .
scancode "KP_Add"      map 0 61 end  # +
scancode "KP_Subtract" map 0 51 end  # -
scancode "KP_Multiply" map 0 71 end  # *
scancode "KP_Divide"   map 0 81 end  # /
scancode "KP_Enter"    map 0 41 end
