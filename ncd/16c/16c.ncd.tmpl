<?xml version="1.0"?>
<!--
Copyright 2007, 2008, 2022 Eric Smith <spacewar@gmail.com>
-->

<!DOCTYPE calcdef SYSTEM "http://nonpareil.brouhaha.com/dtd/calcdef-1.0.dtd">

<calcdef version="1.0"
         arch="Nut"
         platform="Voyager"
         model="16C"
         copyright="Copyright 2007, 2008, 2022 Eric Smith &lt;spacewar@gmail.com&gt;"
         license="GPLv3 only (no later version)">

  <chip type="nut_cpu">
    <part_info>
      <vendor_name>HP</vendor_name>
      <part_number>1LF5-0301</part_number>
    </part_info>
    <inst_clock osc_type="LC" freq="215000"/>
  </chip>

  <chip type="voyager_r2d2" index="0">
    <part_info>
      <vendor_name>HP</vendor_name>
      <part_number>1LE2-0322</part_number>
    </part_info>
    <memory addr_space="inst" banks="0" base_addr="0x0000" size="0x1800">
    </memory>
    <memory addr_space="data" base_addr="0x00" size="0x08">
    </memory>
    <memory addr_space="data" base_addr="0xe0" size="0x20">
    </memory>

    <lcd digits="11" segments="10">
      <!-- For each of 11 digits, we need segments a-g for the actual digit,
	   segment h for the decimal point, segment i for the tail of the
	   comma, and segment j for the annunciator. -->
      <digit digit="0">
	<segment segment="a" reg="-1" bit="-1"/>
	<segment segment="b" reg="-1" bit="-1"/>
	<segment segment="c" reg="-1" bit="-1"/>
	<segment segment="d" reg="-1" bit="-1"/>
	<segment segment="e" reg="-1" bit="-1"/>
	<segment segment="f" reg="-1" bit="-1"/>
	<segment segment="g" reg="9" bit="46"/>
	<segment segment="h" reg="-1" bit="-1"/>
	<segment segment="i" reg="-1" bit="-1"/>
	<segment segment="j" reg="-1" bit="-1"/>
      </digit>
      <digit digit="1">
	<segment segment="a" reg="9" bit="21"/>
	<segment segment="b" reg="9" bit="23"/>
	<segment segment="c" reg="9" bit="19"/>
	<segment segment="d" reg="9" bit="47"/>
	<segment segment="e" reg="9" bit="18"/>
	<segment segment="f" reg="9" bit="20"/>
	<segment segment="g" reg="9" bit="22"/>
	<segment segment="h" reg="9" bit="39"/>
	<segment segment="i" reg="9" bit="38"/>
	<segment segment="j" reg="-1" bit="-1"/>
      </digit>
      <digit digit="2">
	<segment segment="a" reg="9" bit="27"/>
	<segment segment="b" reg="9" bit="29"/>
	<segment segment="c" reg="9" bit="25"/>
	<segment segment="d" reg="9" bit="17"/>
	<segment segment="e" reg="9" bit="24"/>
	<segment segment="f" reg="9" bit="26"/>
	<segment segment="g" reg="9" bit="28"/>
	<segment segment="h" reg="9" bit="15"/>
	<segment segment="i" reg="9" bit="14"/>
	<segment segment="j" reg="9" bit="16"/>
      </digit>
      <digit digit="3">
	<segment segment="a" reg="9" bit="51"/>
	<segment segment="b" reg="9" bit="53"/>
	<segment segment="c" reg="9" bit="49"/>
        <segment segment="d" reg="9" bit="13"/>
	<segment segment="e" reg="9" bit="48"/>
	<segment segment="f" reg="9" bit="50"/>
	<segment segment="g" reg="9" bit="52"/>
	<segment segment="h" reg="9" bit="55"/>
	<segment segment="i" reg="9" bit="54"/>
	<segment segment="j" reg="9" bit="12"/>
      </digit>
      <digit digit="4">
	<segment segment="a" reg="9" bit="33"/>
	<segment segment="b" reg="9" bit="35"/>
	<segment segment="c" reg="9" bit="31"/>
	<segment segment="d" reg="9" bit="9"/>
	<segment segment="e" reg="9" bit="30"/>
	<segment segment="f" reg="9" bit="32"/>
	<segment segment="g" reg="9" bit="34"/>
	<segment segment="h" reg="9" bit="37"/>
	<segment segment="i" reg="9" bit="36"/>
	<segment segment="j" reg="9" bit="8"/>
      </digit>
      <digit digit="5">
	<segment segment="a" reg="9" bit="43"/>
	<segment segment="b" reg="9" bit="45"/>
	<segment segment="c" reg="9" bit="41"/>
	<segment segment="d" reg="9" bit="7"/>
	<segment segment="e" reg="9" bit="40"/>
	<segment segment="f" reg="9" bit="42"/>
	<segment segment="g" reg="9" bit="44"/>
	<segment segment="h" reg="9" bit="11"/>
	<segment segment="i" reg="9" bit="10"/>
	<segment segment="j" reg="9" bit="6"/>
      </digit>
      <digit digit="6">
	<segment segment="a" reg="10" bit="11"/>
	<segment segment="b" reg="10" bit="13"/>
	<segment segment="c" reg="10" bit="9"/>
	<segment segment="d" reg="10" bit="15"/>
	<segment segment="e" reg="10" bit="8"/>
	<segment segment="f" reg="10" bit="10"/>
	<segment segment="g" reg="10" bit="12"/>
	<segment segment="h" reg="10" bit="17"/>
	<segment segment="i" reg="10" bit="16"/>
	<segment segment="j" reg="10" bit="14"/>
      </digit>
      <digit digit="7">
	<segment segment="a" reg="10" bit="21"/>
	<segment segment="b" reg="10" bit="23"/>
	<segment segment="c" reg="10" bit="19"/>
	<segment segment="d" reg="10" bit="7"/>
	<segment segment="e" reg="10" bit="18"/>
	<segment segment="f" reg="10" bit="20"/>
	<segment segment="g" reg="10" bit="22"/>
	<segment segment="h" reg="10" bit="25"/>
	<segment segment="i" reg="10" bit="24"/>
	<segment segment="j" reg="10" bit="6"/>
      </digit>
      <digit digit="8">
	<segment segment="a" reg="10" bit="29"/>
	<segment segment="b" reg="10" bit="31"/>
	<segment segment="c" reg="10" bit="27"/>
	<segment segment="d" reg="10" bit="39"/>
	<segment segment="e" reg="10" bit="26"/>
	<segment segment="f" reg="10" bit="28"/>
	<segment segment="g" reg="10" bit="30"/>
	<segment segment="h" reg="10" bit="37"/>
	<segment segment="i" reg="10" bit="36"/>
	<segment segment="j" reg="10" bit="38"/>
      </digit>
      <digit digit="9">
	<segment segment="a" reg="10" bit="47"/>
	<segment segment="b" reg="10" bit="49"/>
	<segment segment="c" reg="10" bit="45"/>
	<segment segment="d" reg="10" bit="33"/>
	<segment segment="e" reg="10" bit="44"/>
	<segment segment="f" reg="10" bit="46"/>
	<segment segment="g" reg="10" bit="48"/>
	<segment segment="h" reg="10" bit="35"/>
	<segment segment="i" reg="10" bit="34"/>
	<segment segment="j" reg="10" bit="32"/>
      </digit>
      <digit digit="10">
	<segment segment="a" reg="10" bit="53"/>
	<segment segment="b" reg="10" bit="55"/>
	<segment segment="c" reg="10" bit="51"/>
	<segment segment="d" reg="10" bit="41"/>
	<segment segment="e" reg="10" bit="50"/>
	<segment segment="f" reg="10" bit="52"/>
	<segment segment="g" reg="10" bit="54"/>
	<segment segment="h" reg="10" bit="43"/>
	<segment segment="i" reg="10" bit="42"/>
	<segment segment="j" reg="10" bit="40"/>
      </digit>
    </lcd>
  </chip>

  <keyboard>
                                               <!-- unshifted  f-shifted  g-shifted -->
    <key user_keycode="11" hw_keycode="0x13"/> <!-- A          SL         LJ        -->
    <key user_keycode="12" hw_keycode="0x33"/> <!-- B          SR         ASR       -->
    <key user_keycode="13" hw_keycode="0x73"/> <!-- C          RL         RLC       -->
    <key user_keycode="14" hw_keycode="0xc3"/> <!-- D          RR         RRC       -->
    <key user_keycode="15" hw_keycode="0x83"/> <!-- E          RLn        RLCn      -->
    <key user_keycode="16" hw_keycode="0x82"/> <!-- F          RRn        RRCn      -->
    <key user_keycode="17" hw_keycode="0xc2"/> <!-- 7          MASKL      #B        -->
    <key user_keycode="18" hw_keycode="0x72"/> <!-- 8          MASKR      ABS       -->
    <key user_keycode="19" hw_keycode="0x32"/> <!-- 9          RMD        DBLR      -->
    <key user_keycode="10" hw_keycode="0x12"/> <!-- divide     XOR        DBL div   -->

    <key user_keycode="21" hw_keycode="0x10"/> <!-- GSB        x<>(i)     RTN       -->
    <key user_keycode="22" hw_keycode="0x30"/> <!-- GTO        x<>I       LBL       -->
    <key user_keycode="23" hw_keycode="0x70"/> <!-- HEX        SHOW HEX   DSZ       -->
    <key user_keycode="24" hw_keycode="0xc0"/> <!-- DEC        SHOW DEC   ISZ       -->
    <key user_keycode="25" hw_keycode="0x80"/> <!-- OCT        SHOW OCT   sqrt      -->
    <key user_keycode="26" hw_keycode="0x87"/> <!-- BIN        SHOW BIN   1/x       -->
    <key user_keycode="27" hw_keycode="0xc7"/> <!-- 4          SB         SF        -->
    <key user_keycode="28" hw_keycode="0x77"/> <!-- 5          CB         CF        -->
    <key user_keycode="29" hw_keycode="0x37"/> <!-- 6          B?         F?        -->
    <key user_keycode="20" hw_keycode="0x17"/> <!-- multiply   AND        dbl mult  -->

    <key user_keycode="31" hw_keycode="0x11"/> <!-- R/S        (i)        P/R       -->
    <key user_keycode="32" hw_keycode="0x31"/> <!-- SST        I          BST       -->
    <key user_keycode="33" hw_keycode="0x71"/> <!-- Rdn        CLR PRGM   Rup       -->
    <key user_keycode="34" hw_keycode="0xc1"/> <!-- x<>y       CLR REG    PSE       -->
    <key user_keycode="35" hw_keycode="0x81"/> <!-- backspace  CLR PREFIX CLx       -->
    <key user_keycode="36" hw_keycode="0x84"/> <!-- ENTER      WINDOW     LSTx      -->
    <key user_keycode="37" hw_keycode="0xc4"/> <!-- 1          1's comp   x<=y      -->
    <key user_keycode="38" hw_keycode="0x74"/> <!-- 2          2's comp   x<0       -->
    <key user_keycode="39" hw_keycode="0x34"/> <!-- 3          UNSIGN     x>y       -->
    <key user_keycode="30" hw_keycode="0x14"/> <!-- subtract   NOT        x>0       -->

    <key user_keycode="41" hw_keycode="0x18"/> <!-- ON                              -->
    <key user_keycode="42" hw_keycode="0x38"/> <!-- f                               -->
    <key user_keycode="43" hw_keycode="0x78"/> <!-- g                               -->
    <key user_keycode="44" hw_keycode="0xc8"/> <!-- STO        WSIZE      disp <    -->
    <key user_keycode="45" hw_keycode="0x88"/> <!-- RCL        FLOAT      disp >    -->
    <key user_keycode="47" hw_keycode="0xc5"/> <!-- 0          MEM        x/=y      -->
    <key user_keycode="48" hw_keycode="0x75"/> <!-- decimal    STATUS     x/=0      -->
    <key user_keycode="49" hw_keycode="0x35"/> <!-- CHS        EEX        x=y       -->
    <key user_keycode="40" hw_keycode="0x15"/> <!-- add        OR         x=0       -->
  </keyboard>

  <obj_file addr_space="inst" hash="7b8c6604d7531d3a9745dfd910caf1656dc9a12ca2708ed5ded1e04f466c85b9">
    16c.rom
  </obj_file>

</calcdef>
